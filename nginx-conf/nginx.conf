server {
        listen 80;
        listen [::]:80;
        server_name example.com www.example.com;
        server_tokens off;

        location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
        }

        location / { # uncoment this to enable https redirects s ( usefull when you have enabled  ssl )
                rewrite ^ https://$host$request_uri? permanent;
        }
        # location / { # uncoment this to enable http resolve/serve files ( usefull when need fist time ssls)
        #         root /var/www/html;
        #         index index.php index.html index.htm;
        #         try_files $uri $uri/ =404;
        # }          
        location ~ \.php$ {
            root /var/www/html;    
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}
 
server { # comment whole block first time  , when not have issued ssls with certbot , otherwise webserver cant start , due cant found ssl certs
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name example.com www.example.com;
        index index.php;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        location / {
                #try_files $uri =404;
                index index.php index.html index.htm;
                try_files $uri $uri/ =404;
                # try_files $uri @nodejs;

        }
        location ~ \.php$ {
            root /var/www/html;
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
    }
        # location @nodejs {
        #         proxy_pass http://nodejs:8080;
        #         add_header X-Frame-Options "SAMEORIGIN" always;
        #         add_header X-XSS-Protection "1; mode=block" always;
        #         add_header X-Content-Type-Options "nosniff" always;
        #         add_header Referrer-Policy "no-referrer-when-downgrade" always;
        #         add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        #         # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        #         # enable strict transport security only if you understand the implications
        # }

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
}
